input { pipeline { address => traces_orders } }

filter { 

    # extract the json part of the message string into a separate field
    grok { 
        match => { "message" => "^.*?(?<logged_json>{.*)" } 
    } 
    
    # parse the json and remove the string field upon success
    json { 
        source => "logged_json" 
        remove_field => [ "logged_json" ] 
    }
   
    mutate{	
            
        # mapping
        copy => { "[json_data][process_step]" => "process_step" }
        copy => { "[json_data][process_action]" => "process_action" }
        copy => { "[json_data][process_balId]" => "process_balId" }
        copy => { "[json_data][process_balMode]" => "process_balMode" }
        copy => { "[json_data][process_frontal]" => "process_frontal" }
        copy => { "[json_data][process_arpCount]" => "process_arpCount" }
        copy => { "[json_data][process_nbMsgToProcess]" => "process_nbMsgToProcess" }
        copy => { "[json_data][process_nbMsgSuccess]" => "process_nbMsgSuccess" }
        copy => { "[json_data][process_nbMsgFail]" => "process_nbMsgFail" }
        copy => { "[json_data][process_result]" => "process_result" }
        copy => { "[json_data][process_duration]" => "process_duration" }
        copy => { "[json_data][process_msgError]" => "process_msgError" }
        copy => { "[json_data][process_criterion]" => "process_criterion" }
        copy => { "[json_data][process_durationTimeUnit]" => "process_durationTimeUnit" }
        copy => { "[json_data][process_resultAsString]" => "process_resultAsString" }

        remove_field => [ "json_data" ] 
    }
}

# insert to elasticsearch
output {
  elasticsearch {
    hosts => ["https://service.localdomain:9200"]
    user => "admin"
    password => "ChangezMoi"
    ssl_certificate_verification => false
    index => "msgsv-traces_actions-%{+YYYY.MM.dd}"
  }
}


input { pipeline { address => mailet_headers } }

filter {
    # extract the json part of the message string into a separate field
    grok { 
        match => { "message" => "^.*?(?<logged_json>{.*)" }
    } 
    
    # parse the json and remove the string field upon success
    json { 
        source => "logged_json" 
        remove_field => [ "logged_json" ] 
        target => "mailet_data"
    }
      
    # remove leading and trailing < > characters
    mutate{
        gsub => [ 
            "[mailet_data][messageId]", "<", "",
            "[mailet_data][messageId]", ">", ""
		]
            
        # mapping
        copy => { "[mailet_data][messageHeaders]" => "james_enteteMessage" }        
        copy => { "[mailet_data][messageId]" => "messageId" }
        remove_field => [ "mailet_data" ] 
    }
}

output {
 file {
   path => "/home/centos/%{+YYYY-MM-dd}/%{+HH}/%{+YYYY-MM-dd-HH-mm-ss-SSS}-%{messageId}.txt"
   codec => line { format => "%{james_enteteMessage}"}
   stale_cleanup_interval => 3
 }
}
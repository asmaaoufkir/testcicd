input { pipeline { address => traces_alertes } }

filter {
    # extract the json part of the message string into a separate field
    grok { 
        match => { "message" => "^.*?(?<logged_json>{.*)" }
    } 
    
    # parse the json and remove the string field upon success
    json { 
        source => "logged_json" 
        remove_field => [ "logged_json" ] 
        target => "json_data"
    }
      
    # remove leading and trailing < > characters
    mutate{
        gsub => [ 
            "[json_data][alertMessageId]", "<", "",
            "[json_data][alertMessageId]", ">", ""
		]
		
            
        # mapping
		copy => { "[json_data][alertMessageId]" => "messageId" }
        copy => { "[json_data][alertFrontal]" => "nomFrontal" }
        copy => { "[json_data][alertBal]" => "bal" }
        copy => { "[json_data][alertType]" => "type" }
        copy => { "[json_data][alertDateTime]" => "dateTime" }
		
        remove_field => [ "json_data" ] 
    }
}

# upsert to elasticsearch
output {
  elasticsearch {
    hosts => ["https://service.localdomain:9200"]
    user => "admin"
    password => "ChangezMoi"
    ssl_certificate_verification => false
    index => "msgsv-traces_alertes-%{+YYYY.MM.dd}"
    document_id => "%{messageId}"
  }
}
